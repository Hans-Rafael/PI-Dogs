{"ast":null,"code":"import axios from \"axios\";\nimport { GET_DOGS, CLEAR_PAGE, SEARCH_BREEDS, GET_TEMPERAMENT, FILTER_BY_TEMPER, FILTER_BY_CREATED, ORDER_ALPHABETICAL } from './actionsTypes';\nexport const TEMPER = \"TEMPER\";\nexport const getDogs = () => {\n  /* return (dispatch) => {\r\n    return fetch(\"http://localhost:3001/dogs\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        dispatch({\r\n          type: GET_DOGS,\r\n          payload: response,\r\n        });\r\n      });\r\n  }; */\n  return function (dispatch) {\n    return axios.get('http://localhost:3001/dogs').then(response => {\n      dispatch({\n        type: GET_DOGS,\n        payload: response.data.toL\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}; //\n\nexport const clearPage = () => {\n  return {\n    type: CLEAR_PAGE\n  };\n}; //\n\nexport function getByName(name) {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`http://localhost:3001/dogs?name=${name}`);\n      return dispatch({\n        type: SEARCH_BREEDS,\n        payload: response.data\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n} //\n\nexport function getTemperament() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`http://localhost:3001/temperaments`);\n      return dispatch({\n        type: GET_TEMPERAMENT,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(\"No se recibieron los temperamentos\", error);\n    }\n  };\n} //\n\nexport function filterByTemperament(payload) {\n  console.log(payload);\n  return {\n    type: FILTER_BY_TEMPER,\n    payload\n  };\n}\nexport function filterByCreated(payload) {\n  return {\n    type: FILTER_BY_CREATED,\n    payload\n  };\n}\n; //\n\nexport function orderalphabetical(payload) {\n  return {\n    type: ORDER_ALPHABETICAL,\n    payload\n  };\n} //","map":{"version":3,"names":["axios","GET_DOGS","CLEAR_PAGE","SEARCH_BREEDS","GET_TEMPERAMENT","FILTER_BY_TEMPER","FILTER_BY_CREATED","ORDER_ALPHABETICAL","TEMPER","getDogs","dispatch","get","then","response","type","payload","data","toL","catch","error","clearPage","getByName","name","getTemperament","console","log","filterByTemperament","filterByCreated","orderalphabetical"],"sources":["C:/Users/Dell/Claro drive/Henrry/3Tercera/PI-Dogs-main/PI-Dogs/client/src/redux/actions/index.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { GET_DOGS, CLEAR_PAGE, SEARCH_BREEDS, GET_TEMPERAMENT,FILTER_BY_TEMPER, FILTER_BY_CREATED,\r\n  ORDER_ALPHABETICAL, } from './actionsTypes';\r\nexport const TEMPER = \"TEMPER\";\r\n\r\nexport const getDogs = () => {\r\n  /* return (dispatch) => {\r\n    return fetch(\"http://localhost:3001/dogs\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        dispatch({\r\n          type: GET_DOGS,\r\n          payload: response,\r\n        });\r\n      });\r\n  }; */\r\n  return function (dispatch) {\r\n    return axios.get('http://localhost:3001/dogs')\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_DOGS,\r\n          payload: response.data.toL\r\n        })\r\n      }) \r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  }\r\n};\r\n//\r\nexport const clearPage = () => {\r\n  return {\r\n    type: CLEAR_PAGE,\r\n  };\r\n};\r\n//\r\nexport function getByName(name) {\r\n  return async function (dispatch) {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/dogs?name=${name}`);\r\n      return dispatch({\r\n        type: SEARCH_BREEDS,\r\n        payload: response.data\r\n      })\r\n    }\r\n    catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n//\r\nexport function getTemperament() {\r\n  return async function (dispatch) {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/temperaments`);\r\n      return dispatch({\r\n        type: GET_TEMPERAMENT,\r\n        payload: response.data\r\n      })\r\n    }\r\n    catch (error) {\r\n      console.log(\"No se recibieron los temperamentos\", error);\r\n    }\r\n  }\r\n}\r\n//\r\nexport function filterByTemperament(payload) {\r\n  console.log(payload)\r\n  return {\r\n    type: FILTER_BY_TEMPER,\r\n    payload\r\n\r\n  }\r\n}\r\nexport function filterByCreated(payload) {\r\n  return {\r\n      type: FILTER_BY_CREATED,\r\n      payload\r\n  };\r\n};\r\n//\r\nexport function orderalphabetical(payload) {\r\n  return {\r\n    type: ORDER_ALPHABETICAL,\r\n    payload\r\n  }\r\n}\r\n//\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,aAA/B,EAA8CC,eAA9C,EAA8DC,gBAA9D,EAAgFC,iBAAhF,EACEC,kBADF,QAC6B,gBAD7B;AAEA,OAAO,MAAMC,MAAM,GAAG,QAAf;AAEP,OAAO,MAAMC,OAAO,GAAG,MAAM;EAC3B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAO,UAAUC,QAAV,EAAoB;IACzB,OAAOV,KAAK,CAACW,GAAN,CAAU,4BAAV,EACJC,IADI,CACCC,QAAQ,IAAI;MAChBH,QAAQ,CAAC;QACPI,IAAI,EAAEb,QADC;QAEPc,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;MAFhB,CAAD,CAAR;IAID,CANI,EAOJC,KAPI,CAOEC,KAAK,IAAI;MACd,MAAMA,KAAN;IACD,CATI,CAAP;EAUD,CAXD;AAYD,CAvBM,C,CAwBP;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAC7B,OAAO;IACLN,IAAI,EAAEZ;EADD,CAAP;AAGD,CAJM,C,CAKP;;AACA,OAAO,SAASmB,SAAT,CAAmBC,IAAnB,EAAyB;EAC9B,OAAO,gBAAgBZ,QAAhB,EAA0B;IAC/B,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACW,GAAN,CAAW,mCAAkCW,IAAK,EAAlD,CAAvB;MACA,OAAOZ,QAAQ,CAAC;QACdI,IAAI,EAAEX,aADQ;QAEdY,OAAO,EAAEF,QAAQ,CAACG;MAFJ,CAAD,CAAf;IAID,CAND,CAOA,OAAOG,KAAP,EAAc;MACZ,MAAMA,KAAN;IACD;EACF,CAXD;AAYD,C,CACD;;AACA,OAAO,SAASI,cAAT,GAA0B;EAC/B,OAAO,gBAAgBb,QAAhB,EAA0B;IAC/B,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACW,GAAN,CAAW,oCAAX,CAAvB;MACA,OAAOD,QAAQ,CAAC;QACdI,IAAI,EAAEV,eADQ;QAEdW,OAAO,EAAEF,QAAQ,CAACG;MAFJ,CAAD,CAAf;IAID,CAND,CAOA,OAAOG,KAAP,EAAc;MACZK,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDN,KAAlD;IACD;EACF,CAXD;AAYD,C,CACD;;AACA,OAAO,SAASO,mBAAT,CAA6BX,OAA7B,EAAsC;EAC3CS,OAAO,CAACC,GAAR,CAAYV,OAAZ;EACA,OAAO;IACLD,IAAI,EAAET,gBADD;IAELU;EAFK,CAAP;AAKD;AACD,OAAO,SAASY,eAAT,CAAyBZ,OAAzB,EAAkC;EACvC,OAAO;IACHD,IAAI,EAAER,iBADH;IAEHS;EAFG,CAAP;AAID;AAAA,C,CACD;;AACA,OAAO,SAASa,iBAAT,CAA2Bb,OAA3B,EAAoC;EACzC,OAAO;IACLD,IAAI,EAAEP,kBADD;IAELQ;EAFK,CAAP;AAID,C,CACD"},"metadata":{},"sourceType":"module"}